// Generated by view binder compiler. Do not edit!
package com.twentytwo.textme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.twentytwo.textme.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDeveloperUpdateBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final EditText FBID;

  @NonNull
  public final EditText FG;

  @NonNull
  public final EditText FS;

  @NonNull
  public final EditText INSTAID;

  @NonNull
  public final EditText WEBID;

  @NonNull
  public final Button devUpdateBtn;

  @NonNull
  public final TextView secUserDev;

  private ActivityDeveloperUpdateBinding(@NonNull ScrollView rootView, @NonNull EditText FBID,
      @NonNull EditText FG, @NonNull EditText FS, @NonNull EditText INSTAID,
      @NonNull EditText WEBID, @NonNull Button devUpdateBtn, @NonNull TextView secUserDev) {
    this.rootView = rootView;
    this.FBID = FBID;
    this.FG = FG;
    this.FS = FS;
    this.INSTAID = INSTAID;
    this.WEBID = WEBID;
    this.devUpdateBtn = devUpdateBtn;
    this.secUserDev = secUserDev;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDeveloperUpdateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDeveloperUpdateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_developer_update, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDeveloperUpdateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.FBID;
      EditText FBID = rootView.findViewById(id);
      if (FBID == null) {
        break missingId;
      }

      id = R.id.FG;
      EditText FG = rootView.findViewById(id);
      if (FG == null) {
        break missingId;
      }

      id = R.id.FS;
      EditText FS = rootView.findViewById(id);
      if (FS == null) {
        break missingId;
      }

      id = R.id.INSTAID;
      EditText INSTAID = rootView.findViewById(id);
      if (INSTAID == null) {
        break missingId;
      }

      id = R.id.WEBID;
      EditText WEBID = rootView.findViewById(id);
      if (WEBID == null) {
        break missingId;
      }

      id = R.id.devUpdateBtn;
      Button devUpdateBtn = rootView.findViewById(id);
      if (devUpdateBtn == null) {
        break missingId;
      }

      id = R.id.secUserDev;
      TextView secUserDev = rootView.findViewById(id);
      if (secUserDev == null) {
        break missingId;
      }

      return new ActivityDeveloperUpdateBinding((ScrollView) rootView, FBID, FG, FS, INSTAID, WEBID,
          devUpdateBtn, secUserDev);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
