// Generated by view binder compiler. Do not edit!
package com.twentytwo.textme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.twentytwo.textme.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.webrtc.SurfaceViewRenderer;

public final class ActivityMain2Binding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView audioOutputButton;

  @NonNull
  public final LinearLayout controls;

  @NonNull
  public final ImageView endCallButton;

  @NonNull
  public final SurfaceViewRenderer localView;

  @NonNull
  public final ImageView micButton;

  @NonNull
  public final SurfaceViewRenderer remoteView;

  @NonNull
  public final ProgressBar remoteViewLoading;

  @NonNull
  public final ImageView switchCameraButton;

  @NonNull
  public final ImageView videoButton;

  private ActivityMain2Binding(@NonNull RelativeLayout rootView,
      @NonNull ImageView audioOutputButton, @NonNull LinearLayout controls,
      @NonNull ImageView endCallButton, @NonNull SurfaceViewRenderer localView,
      @NonNull ImageView micButton, @NonNull SurfaceViewRenderer remoteView,
      @NonNull ProgressBar remoteViewLoading, @NonNull ImageView switchCameraButton,
      @NonNull ImageView videoButton) {
    this.rootView = rootView;
    this.audioOutputButton = audioOutputButton;
    this.controls = controls;
    this.endCallButton = endCallButton;
    this.localView = localView;
    this.micButton = micButton;
    this.remoteView = remoteView;
    this.remoteViewLoading = remoteViewLoading;
    this.switchCameraButton = switchCameraButton;
    this.videoButton = videoButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMain2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMain2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMain2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audio_output_button;
      ImageView audioOutputButton = rootView.findViewById(id);
      if (audioOutputButton == null) {
        break missingId;
      }

      id = R.id.controls;
      LinearLayout controls = rootView.findViewById(id);
      if (controls == null) {
        break missingId;
      }

      id = R.id.end_call_button;
      ImageView endCallButton = rootView.findViewById(id);
      if (endCallButton == null) {
        break missingId;
      }

      id = R.id.local_view;
      SurfaceViewRenderer localView = rootView.findViewById(id);
      if (localView == null) {
        break missingId;
      }

      id = R.id.mic_button;
      ImageView micButton = rootView.findViewById(id);
      if (micButton == null) {
        break missingId;
      }

      id = R.id.remote_view;
      SurfaceViewRenderer remoteView = rootView.findViewById(id);
      if (remoteView == null) {
        break missingId;
      }

      id = R.id.remote_view_loading;
      ProgressBar remoteViewLoading = rootView.findViewById(id);
      if (remoteViewLoading == null) {
        break missingId;
      }

      id = R.id.switch_camera_button;
      ImageView switchCameraButton = rootView.findViewById(id);
      if (switchCameraButton == null) {
        break missingId;
      }

      id = R.id.video_button;
      ImageView videoButton = rootView.findViewById(id);
      if (videoButton == null) {
        break missingId;
      }

      return new ActivityMain2Binding((RelativeLayout) rootView, audioOutputButton, controls,
          endCallButton, localView, micButton, remoteView, remoteViewLoading, switchCameraButton,
          videoButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
